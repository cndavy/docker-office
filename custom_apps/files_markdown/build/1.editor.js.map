{"version":3,"sources":["webpack:///./js/CheckboxPlugin.ts","webpack:///./js/VideoPlugin.ts","webpack:///./js/Renderer.ts"],"names":["CheckBoxReplacer","md","userOptions","lastId","options","$","extend","divWrap","divClass","idPrefix","readonly","checkboxClass","pattern","splitTextToken","original","Token","line","matches","content","match","value","checked","label","token","nodes","attrs","push","id","String","createTokens","state","tokens","type","currentLine","map","newChildren","children","childToken","concat","CheckboxPlugin","core","ruler","youtubeRegex","vimeoRegex","vineRegex","preziRegex","getVideoId","service","url","serviceLower","toLowerCase","length","youtubeParser","vimeoParser","vineParser","preziParser","renderVideo","altTokenizer","renderer","idx","env","attrGet","attrIndex","alt","indexOf","videoID","escapedVideoId","utils","escapeHtml","lowerService","height","width","vine","embed","videoUrl","renderVideoService","isEmbeddedVideo","renderEmbededVideo","defaults","youtube","vimeo","prezi","VideoPlugin","originalRenderer","rules","image","slf","slugifyHeading","name","loadKaTeX","Promise","all","then","katex","default","texmath","use","loadMermaid","module","MermaidPlugin","loadHighlight","plugins","checker","text","this","linkify","slugify","href","attrPush","attrSet","getLinkUrl","getImageUrl","paragraph_open","heading_open","level","attrJoin","renderToken","path","substr","OCA","Files_Texteditor","file","dir","Files","App","fileList","_currentDirectory","OC","linkToRemote","replace","renderText","element","loadPlugins","html","render","childrenOnly","Object","keys","pluginName","plugin","loaded"],"mappings":"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","file":"1.editor.js","sourcesContent":["// based on https://github.com/mcecot/markdown-it-checkbox\n\nimport MarkdownIt from \"markdown-it\";\nimport Token from 'markdown-it/lib/token';\nimport StateCore from \"markdown-it/lib/rules_core/state_core\";\n\nexport interface CheckboxPluginOptions {\n\tdivWrap: boolean;\n\tdivClass: string;\n\tidPrefix: string;\n\treadonly: boolean;\n\tcheckboxClass: string;\n}\n\ninterface TokenConstructor {\n\tnew(name: string, tagName: string, someNumber: number): Token;\n}\n\ninterface CheckboxReplacerState extends StateCore {\n\tToken: TokenConstructor;\n}\n\nexport function CheckBoxReplacer(md: MarkdownIt, userOptions: Partial<CheckboxPluginOptions>): MarkdownIt.Rule {\n\tlet lastId = 0;\n\tconst defaults: CheckboxPluginOptions = {\n\t\tdivWrap: false,\n\t\tdivClass: 'checkbox',\n\t\tidPrefix: 'checkbox',\n\t\treadonly: true,\n\t\tcheckboxClass: ''\n\t};\n\tconst options = $.extend(defaults, userOptions);\n\tconst pattern = /\\[(X|\\s|\\_|\\-)\\]\\s(.*)/i;\n\tconst createTokens = function (checked: boolean, label: string, Token: TokenConstructor, line: number): Token[] {\n\t\tconst nodes: Token[] = [];\n\t\tlet token: Token;\n\n\t\t/**\n\t\t * <div class=\"checkbox\">\n\t\t */\n\t\tif (options.divWrap) {\n\t\t\ttoken = new Token(\"checkbox_open\", \"div\", 1);\n\t\t\ttoken.attrs = [[\"class\", options.divClass]];\n\t\t\tnodes.push(token);\n\t\t}\n\n\t\t/**\n\t\t * <input type=\"checkbox\" id=\"checkbox{n}\" checked=\"true data-line=\"{n}\">\n\t\t */\n\t\tconst id = options.idPrefix + lastId;\n\t\tlastId += 1;\n\t\ttoken = new Token(\"checkbox_input\", \"input\", 0);\n\t\ttoken.attrs = [[\"type\", \"checkbox\"], [\"id\", id]];\n\t\tif (checked === true) {\n\t\t\ttoken.attrs.push([\"checked\", \"true\"]);\n\t\t}\n\t\tif (options.readonly) {\n\t\t\ttoken.attrs.push([\"disabled\", \"disabled\"]);\n\t\t}\n\t\tif (options.checkboxClass) {\n\t\t\ttoken.attrs.push([\"class\", options.checkboxClass]);\n\t\t}\n\t\ttoken.attrs.push([\"data-line\", String(line)]);\n\t\tnodes.push(token);\n\n\t\t/**\n\t\t * <label for=\"checkbox{n}\">\n\t\t */\n\t\ttoken = new Token(\"label_open\", \"label\", 1);\n\t\ttoken.attrs = [[\"for\", id]];\n\t\tnodes.push(token);\n\n\t\t/**\n\t\t * content of label tag\n\t\t */\n\t\ttoken = new Token(\"text\", \"\", 0);\n\t\ttoken.content = label;\n\t\tnodes.push(token);\n\n\t\t/**\n\t\t * closing tags\n\t\t */\n\t\tnodes.push(new Token(\"label_close\", \"label\", -1));\n\t\tif (options.divWrap) {\n\t\t\tnodes.push(new Token(\"checkbox_close\", \"div\", -1));\n\t\t}\n\t\treturn nodes;\n\t};\n\n\tconst splitTextToken = function (original: Token, Token: TokenConstructor, line: number): Token[] {\n\t\tconst text = original.content;\n\t\tconst matches = text.match(pattern);\n\t\tif (matches === null) {\n\t\t\treturn [original];\n\t\t}\n\t\tconst value = matches[1];\n\t\tconst label = matches[2];\n\t\tconst checked = (value === \"X\" || value === \"x\");\n\t\treturn createTokens(checked, label, Token, line);\n\t};\n\n\treturn function (state: CheckboxReplacerState) {\n\t\tfor (const token of state.tokens) {\n\t\t\tif (token.type === \"inline\") {\n\t\t\t\tlet currentLine = token.map ? token.map[0] : 0;\n\t\t\t\tlet newChildren: Token[] = [];\n\t\t\t\tfor (const childToken of token.children) {\n\t\t\t\t\tif (childToken.type === 'hardbreak' || childToken.type === 'softbreak') {\n\t\t\t\t\t\tcurrentLine++;\n\t\t\t\t\t}\n\t\t\t\t\tnewChildren = newChildren.concat(splitTextToken(childToken, state.Token, currentLine))\n\t\t\t\t}\n\t\t\t\ttoken.children = newChildren;\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport function CheckboxPlugin(md: MarkdownIt, options: CheckboxPluginOptions) {\n\tmd.core.ruler.push(\"checkbox\", CheckBoxReplacer(md, options));\n}\n","// based on https://github.com/brianjgeiger/markdown-it-video\n\nimport MarkdownIt from \"markdown-it\";\nimport Token from 'markdown-it/lib/token';\n\ntype VideoService = 'youtube' | 'vimeo' | 'vine' | 'prezi';\n\nfunction isVideoService(service: string): service is VideoService {\n    return ['youtube', 'vimeo', 'vine', 'prezi'].indexOf(service) !== -1;\n}\n\nconst youtubeRegex = /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#\\&\\?]*).*/;\n\nfunction youtubeParser(url: string): string {\n    const match = url.match(youtubeRegex);\n    return match && match[7].length === 11 ? match[7] : url;\n}\n\n/*eslint-disable max-len */\nconst vimeoRegex = /https?:\\/\\/(?:www\\.|player\\.)?vimeo.com\\/(?:channels\\/(?:\\w+\\/)?|groups\\/([^\\/]*)\\/videos\\/|album\\/(\\d+)\\/video\\/|)(\\d+)(?:$|\\/|\\?)/;\n\n/*eslint-enable max-len */\nfunction vimeoParser(url: string): string {\n    const match = url.match(vimeoRegex);\n    return match && typeof match[3] === 'string' ? match[3] : url;\n}\n\nconst vineRegex = /^http(?:s?):\\/\\/(?:www\\.)?vine\\.co\\/v\\/([a-zA-Z0-9]{1,13}).*/;\n\nfunction vineParser(url: string): string {\n    const match = url.match(vineRegex);\n    return match && match[1].length === 11 ? match[1] : url;\n}\n\nconst preziRegex = /^https:\\/\\/prezi.com\\/(.[^/]+)/;\n\nfunction preziParser(url: string): string {\n    const match = url.match(preziRegex);\n    return match ? match[1] : url;\n}\n\nfunction getVideoId(service: string, url: string): string | false {\n    const serviceLower = service.toLowerCase();\n    if (serviceLower === 'youtube') {\n        return youtubeParser(url);\n    } else if (serviceLower === 'vimeo') {\n        return vimeoParser(url);\n    } else if (serviceLower === 'vine') {\n        return vineParser(url);\n    } else if (serviceLower === 'prezi') {\n        return preziParser(url);\n    }\n    return false;\n}\n\nfunction videoUrl(service: VideoService, videoID: string, options: VideoOptions): string {\n    switch (service) {\n        case 'youtube':\n            return '//www.youtube.com/embed/' + videoID;\n        case 'vimeo':\n            return '//player.vimeo.com/video/' + videoID;\n        case 'vine':\n            return '//vine.co/v/' + videoID + '/embed/' + options.vine.embed;\n        case 'prezi':\n            return 'https://prezi.com/embed/' + videoID +\n                '/?bgcolor=ffffff&amp;lock_to_path=0&amp;autoplay=0&amp;autohide_ctrls=0&amp;' +\n                'landing_data=bHVZZmNaNDBIWnNjdEVENDRhZDFNZGNIUE43MHdLNWpsdFJLb2ZHanI5N1lQVHkxSHFxazZ0UUNCRHloSXZROHh3PT0&amp;' +\n                'landing_sign=1kD6c0N6aYpMUS0wxnQjxzSqZlEB8qNFdxtdjYhwSuI';\n    }\n}\n\nfunction isEmbeddedVideo(url: string) {\n    return url.match(/\\.(webm|mp4|ogv)/) !== null;\n}\n\nfunction renderVideo(md: MarkdownIt, options: VideoOptions) {\n    const altTokenizer = md.renderer['renderInlineAsText'];\n    return (tokens: Token[], idx: number, env) => {\n        const token = tokens[idx];\n        const url = token.attrGet('src');\n        if (!url) {\n            return false;\n        }\n        token.attrs[token.attrIndex('alt')][1] = altTokenizer(token.children, options, env);\n        const alt = token.attrGet('alt');\n        if (alt && isVideoService(alt)) {\n            return renderVideoService(md, options, alt, url);\n        }\n        if (isEmbeddedVideo(url)) {\n            return renderEmbededVideo(md, options, url);\n        }\n\n        return false;\n    }\n}\n\nfunction renderVideoService(md: MarkdownIt, options: VideoOptions, service: VideoService, url: string): string | false {\n    const videoID = getVideoId(service, url as string);\n    if (!videoID) {\n        return false;\n    }\n    const escapedVideoId = md.utils.escapeHtml(videoID);\n    const lowerService = service.toLowerCase() as VideoService;\n    const height = options[lowerService].width / 16 * 9;\n    return videoID === '' ? '' :\n        '<div class=\"embed-responsive\"><iframe class=\"embed-responsive-item\" id=\"' +\n        service + 'player\" type=\"text/html\" width=\"' + (options[lowerService].width) +\n        '\" height=\"' + (height) +\n        '\" src=\"' + videoUrl(lowerService, escapedVideoId, options) +\n        '\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe></div>';\n}\n\nfunction renderEmbededVideo(md: MarkdownIt, options: VideoOptions, url: string) {\n    url = md.utils.escapeHtml(url);\n    return `<div class=\"embed-responsive\"><video controls=\"controls\" src=\"${url}\"/></div>`;\n}\n\nexport interface VideoServiceOptions {\n    width: number;\n}\n\nexport interface VineOptions extends VideoServiceOptions {\n    embed: string;\n}\n\nexport interface VideoOptions {\n    youtube: VideoServiceOptions;\n    vimeo: VideoServiceOptions;\n    vine: VineOptions;\n    prezi: VideoServiceOptions;\n}\n\nconst defaults: VideoOptions = {\n    youtube: {width: 640},\n    vimeo: {width: 500},\n    vine: {width: 600, embed: 'simple'},\n    prezi: {width: 550}\n};\n\nexport default function VideoPlugin(md: MarkdownIt, options: VideoOptions) {\n    const originalRenderer = md.renderer.rules.image;\n    md.renderer.rules.image = (tokens: Token[], idx: number, options: VideoOptions, env, slf) => {\n        options = $.extend(defaults, options);\n        const videoResult = renderVideo(md, options)(tokens, idx, env);\n        return videoResult || originalRenderer(tokens, idx, options, env, slf)\n    };\n}\n","import MarkdownIt from 'markdown-it';\nimport Token from 'markdown-it/lib/token';\nimport iterator from 'markdown-it-for-inline';\nimport {CheckboxPlugin} from './CheckboxPlugin';\nimport AnchorPlugin from 'markdown-it-anchor';\nimport slugify from 'slugify';\nimport TOCPlugin from 'markdown-it-table-of-contents';\nimport VideoPlugin from './VideoPlugin';\nimport PreamblePlugin from 'markdown-it-github-preamble';\nimport morphdom from 'morphdom';\n\nimport 'katex/dist/katex.min.css';\nimport 'highlight.js/styles/github.css';\n\nconst slugifyHeading = name => 'editor/' + slugify(name).toLowerCase();\n\nexport type PluginChecker = (text: string) => boolean;\n\nexport interface PluginMap {\n    [name: string]: {\n        checker: PluginChecker;\n        module: () => Promise<any>;\n        loaded?: boolean\n    }\n}\n\nfunction loadKaTeX() {\n    return Promise.all([\n        import('katex'),\n        import('markdown-it-texmath'),\n    ]).then(([katex, {default: texmath}]) => {\n        texmath.use(katex);\n        return texmath;\n    });\n}\n\nfunction loadMermaid() {\n    return import('./MermaidPlugin').then(module => module.MermaidPlugin);\n}\n\nfunction loadHighlight() {\n    return import('markdown-it-highlightjs').then(module => module.default);\n}\n\nexport class Renderer {\n    md: MarkdownIt;\n\n    plugins: PluginMap = {\n        'mermaid': {\n            checker: text => text.match(/(gantt|sequenceDiagram|graph (?:TB|BT|RL|LR|TD))/) !== null,\n            module: loadMermaid\n        },\n        'highlight.js': {\n            checker: text => text.indexOf('```') !== -1,\n            module: loadHighlight\n        },\n        'katex': {\n            checker: text => text.indexOf('$') !== -1,\n            module: loadKaTeX\n        }\n    };\n\n    constructor(readonly: boolean = false) {\n        this.md = new MarkdownIt({\n            linkify: true\n        });\n        this.md.use(CheckboxPlugin, {\n            checkboxClass: 'checkbox',\n            readonly: readonly\n        });\n        this.md.use(AnchorPlugin, {\n            slugify: slugifyHeading\n        });\n        this.md.use(TOCPlugin, {\n            slugify: slugifyHeading\n        });\n        this.md.use(PreamblePlugin);\n        this.md.use(VideoPlugin);\n        this.md.use(iterator, 'url_new_win', 'link_open', (tokens: Token[], idx: number) => {\n            const href = tokens[idx].attrGet('href') as string;\n            if (href[0] !== '#') {\n                tokens[idx].attrPush(['target', '_blank']);\n                tokens[idx].attrPush(['rel', 'noopener']);\n            }\n            tokens[idx].attrSet('href', this.getLinkUrl(href))\n        });\n        this.md.use(iterator, 'internal_image_link', 'image', (tokens: Token[], idx: number) => {\n            tokens[idx].attrSet('src', this.getImageUrl(tokens[idx].attrGet('src') as string));\n        });\n\n        function injectLineNumbers(tokens, idx, options, env, slf) {\n            if (tokens[idx].map && tokens[idx].level === 0) {\n                const line = tokens[idx].map[0];\n                tokens[idx].attrJoin('class', 'line');\n                tokens[idx].attrSet('data-line', String(line));\n            }\n            return slf.renderToken(tokens, idx, options, env, slf);\n        }\n\n        this.md.renderer.rules.paragraph_open =\n            this.md.renderer.rules.heading_open =\n                this.md.renderer.rules.heading_open =\n                    injectLineNumbers;\n    }\n\n    getLinkUrl(path: string): string {\n        if (path[0] === '#') {\n            return '#' + slugifyHeading(path.substr(1));\n        }\n        return path;\n    }\n\n    getImageUrl(path: string): string {\n        if (!path || path.indexOf('.') === -1) {\n            return path;\n        }\n        if (path.indexOf('://') !== -1) {\n            return path;\n        } else {\n            if (path.substr(0, 1) !== '/') {\n                if (OCA.Files_Texteditor.file && OCA.Files_Texteditor.file.dir) {\n                    path = OCA.Files_Texteditor.file.dir + '/' + path;\n                } else if (OCA.Files.App && OCA.Files.App.fileList._currentDirectory) {\n                    path = OCA.Files.App.fileList._currentDirectory + '/' + path;\n                }\n            }\n            return OC.linkToRemote('files' + path.replace(/\\/\\/+/g, '/'));\n        }\n    }\n\n    renderText(text: string, element): Promise<void> {\n        return this.loadPlugins(text).then(() => {\n                const html = this.md.render(text);\n                morphdom(element[0], `<div>${html}</div>`, {\n                    childrenOnly: true\n                });\n            }\n        );\n    }\n\n    loadPlugins(text: string) {\n        return Promise.all(Object.keys(this.plugins)\n            .map(pluginName => {\n                const plugin = this.plugins[pluginName];\n                if (!plugin.loaded && plugin.checker(text)) {\n                    plugin.loaded = true;\n                    return plugin.module().then(plugin => {\n                        this.md.use(plugin);\n                    });\n                }\n            })\n        );\n    }\n}\n"],"sourceRoot":""}